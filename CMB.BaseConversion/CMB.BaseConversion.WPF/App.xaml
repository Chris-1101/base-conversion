<Application x:Class="CMB.BaseConversion.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CMB.BaseConversion.WPF"
             StartupUri="MainWindow.xaml">
    
    <Application.Resources>
        <!-- Fonts -->
        <FontFamily x:Key="HelveticaNeueLtEx">pack://application:,,,/fonts/#Helvetica Neue LT Pro 43 Light Extended</FontFamily>
        <FontFamily x:Key="CenturyGothicReg">pack://application:,,,/fonts/#Century Gothic Regular</FontFamily>
        
        <!-- Images -->
        <BitmapImage x:Key="BaseConversionImg" UriSource="images/BaseConversion.png"/>
        <ImageBrush x:Key="MinimiseBtn" ImageSource="images/MinimiseButton.png" Stretch="Uniform"/>
        <ImageBrush x:Key="CloseBtn" ImageSource="images/CloseButton.png" Stretch="Uniform"/>
        
        <BitmapImage x:Key="CMBLogo" UriSource="images/CMBLogo.png"/>
        <ImageBrush x:Key="TabConvert" ImageSource="images/TabConvert.png" Stretch="Uniform"/>
        <ImageBrush x:Key="TabResetIdle" ImageSource="images/TabResetIdle.png" Stretch="Uniform"/>
        <ImageBrush x:Key="TabResetHover" ImageSource="images/TabResetHover.png" Stretch="Uniform"/>
        <ImageBrush x:Key="TabExitIdle" ImageSource="images/TabExitIdle.png" Stretch="Uniform"/>
        <ImageBrush x:Key="TabExitHover" ImageSource="images/TabExitHover.png" Stretch="Uniform"/>

        <ImageBrush x:Key="ContentBG" ImageSource="images/ContentBG.png" Stretch="Uniform"/>
        <BitmapImage x:Key="InputLbl" UriSource="images/InputLabel.png"/>
        <ImageBrush x:Key="DropDownArrow" ImageSource="images/DropDownArrow.png" Stretch="Uniform"/>
        <ImageBrush x:Key="ConvertBtn" ImageSource="images/ConvertButton.png" Stretch="Uniform"/>
        <BitmapImage x:Key="ResultLbl" UriSource="images/ResultLabel.png"/>

        <!-- Colours -->
        <SolidColorBrush x:Key="TitleBarBG">#070A1E</SolidColorBrush>
        <LinearGradientBrush x:Key="SideBarBG" StartPoint="0,0" EndPoint="0, 1">
            <GradientStop Color="#160C26" Offset="0"/>
            <GradientStop Color="#020211" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="InputBorderInactive">#18384E</SolidColorBrush>
        <SolidColorBrush x:Key="InputBorderActive">#0C7688</SolidColorBrush>
        <SolidColorBrush x:Key="InputBGActive">#1A0C7688</SolidColorBrush>
        <SolidColorBrush x:Key="InputTextInactive">#23566E</SolidColorBrush>
        <SolidColorBrush x:Key="InputTextActive">#45E6E9</SolidColorBrush>

        <SolidColorBrush x:Key="ListItem.Border">#0A45E6E9</SolidColorBrush>
        <Color x:Key="ListItem.BGInactive">#0A45E6E9</Color>
        <Color x:Key="ListItem.BGActive">#1A45E6E9</Color>

        <SolidColorBrush x:Key="ResultBackground">#0A45E6E9</SolidColorBrush>
        <SolidColorBrush x:Key="ResultBorder">#18384E</SolidColorBrush>

        <SolidColorBrush x:Key="WarningBG">#4AD15906</SolidColorBrush>
        <SolidColorBrush x:Key="WarningBorder">#D15906</SolidColorBrush>
        <SolidColorBrush x:Key="ErrorBG">#4AC42A13</SolidColorBrush>
        <SolidColorBrush x:Key="ErrorBorder">#C42A13</SolidColorBrush>
        <SolidColorBrush x:Key="StatusBarBorder">#1A2148</SolidColorBrush>

        <!-- Transitions Duration (Global) -->
        <Duration x:Key="TransitionDuration">00:00:00.300</Duration>

        <!-- Image Button (Window Controls, Tabs, Convert Button) -->
        <ControlTemplate x:Key="ImageButton" TargetType="{x:Type Button}">
            
            <!-- Resource Definitions -->
            <ControlTemplate.Resources>
                <Storyboard x:Key="MouseOverAnimation">
                    <DoubleAnimation
                        Storyboard.TargetName       = "MouseOverBG"
                        Storyboard.TargetProperty   = "Opacity"
                        Duration                    = "{StaticResource TransitionDuration}"
                        To                          = "1"
                        />
                </Storyboard>
                
                <Storyboard x:Key="MouseOutAnimation">
                    <DoubleAnimation
                        Storyboard.TargetName       = "MouseOverBG"
                        Storyboard.TargetProperty   = "Opacity"
                        Duration                    = "{StaticResource TransitionDuration}"
                        To                          = "0"
                        />
                </Storyboard>
            </ControlTemplate.Resources>

            <!-- Visual Tree -->
            <Grid x:Name="Root">
                <Border
                    x:Name            = "NormalBG"
                    Background        = "{TemplateBinding Background}"
                    BorderBrush       = "Transparent"
                    BorderThickness   = "0"
                    Opacity           = "1"
                    />
                
                <Border
                    x:Name            = "MouseOverBG"
                    Background        = "{TemplateBinding BorderBrush}"
                    BorderBrush       = "Transparent"
                    BorderThickness   = "0"
                    Opacity           = "0"
                    />
            </Grid>

            <!-- Mouse States -->
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
            
        </ControlTemplate>

        <!-- Input TextBox -->
        <Style x:Key="InputTextBox" TargetType="{x:Type TextBox}">
            
            <!-- Style -->
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource InputTextInactive}" />
            <Setter Property="CaretBrush" Value="{StaticResource InputTextActive}" />
            <Setter Property="FontFamily" Value="{StaticResource CenturyGothicReg}" />
            <Setter Property="FontSize" Value="18" />

            <!-- Control Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        
                        <!-- Visual Tree -->
                        <Grid x:Name="Root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            
                            <!-- Border - Normal State -->
                            <Border
                                x:Name            = "NormalBorder"
                                Background        = "Transparent"
                                BorderBrush       = "{StaticResource InputBorderInactive}"
                                BorderThickness   = "1"
                                />

                            <!-- Border - Focused State -->
                            <Border
                                x:Name            = "FocusedBorder"
                                Background        = "{StaticResource InputBGActive}"
                                BorderBrush       = "{StaticResource InputBorderActive}"
                                BorderThickness   = "1"
                                Opacity           = "0"
                                />

                            <!-- Content-Presenter -->
                            <ScrollViewer
                                x:Name                = "PART_ContentHost"
                                Margin                = "14, 2"
                                Padding               = "{TemplateBinding Padding}"
                                HorizontalAlignment   = "Stretch"
                                VerticalAlignment     = "Stretch"
                                Background            = "{x:Null}"
                                          
                                IsTabStop   = "{TemplateBinding IsTabStop}"
                                />

                            <!-- Event States -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusedStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetName       = "FocusedBorder"
                                                Storyboard.TargetProperty   = "Opacity"       
                                                Duration                    = "{StaticResource TransitionDuration}"
                                                To                          = "1"
                                                />
                                        </Storyboard>
                                    </VisualState>
                                    
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName       = "FocusedBorder"
                                                Storyboard.TargetProperty   = "Opacity"
                                                Duration                    = "{StaticResource TransitionDuration}"
                                                To                          = "0"
                                                />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                        </Grid>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <!-- Input Drop Down List -->
        <Style x:Key="InputComboBox" TargetType="{x:Type ComboBox}">
            
            <!-- ComboBox Style -->
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{StaticResource InputBorderInactive}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

            <!-- ComboBox Control Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        
                        <!-- ComboBox Visual Tree -->
                        <Grid x:Name="DropDownRoot">
                            
                            <!-- Toggle Button -->
                            <ToggleButton x:Name="DropDownToggle" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        
                                        <!-- Toggle Button Style -->
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="Height" Value="Auto"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource InputBorderInactive}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                        <Setter Property="VerticalAlignment" Value="Stretch"/>

                                        <!-- Toggle Button Control Template -->
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    
                                                    <!-- Toggle Button Visual Tree -->
                                                    <Grid>
                                                        <Border
                                                            x:Name            = "FocusedBG"
                                                            Panel.ZIndex      = "2"
                                                            Opacity           = "0"
                                                            Background        = "{StaticResource InputBGActive}"
                                                            BorderBrush       = "{StaticResource InputBorderActive}"
                                                            BorderThickness   = "{TemplateBinding BorderThickness}"
                                                            />
                                                        
                                                        <Border
                                                            x:Name            = "DropDownBorder"
                                                            Panel.ZIndex      = "1"
                                                            Background        = "{TemplateBinding Background}"
                                                            BorderBrush       = "{TemplateBinding BorderBrush}"
                                                            BorderThickness   = "{TemplateBinding BorderThickness}"
                                                            />

                                                        <Border
                                                            x:Name                = "DropDownArrow"
                                                            Width                 = "24"
                                                            Height                = "12"
                                                            Margin                = "14, 3, 14, 0"
                                                            Panel.ZIndex          = "3"
                                                            HorizontalAlignment   = "{TemplateBinding HorizontalContentAlignment}"
                                                            Background            = "{StaticResource DropDownArrow}"
                                                            />
                                                    </Grid>

                                                    <!-- Toggle Button Resources -->
                                                    <ControlTemplate.Resources>
                                                        <Storyboard x:Key="FocusedAnimationIn">
                                                            <DoubleAnimation
                                                                Storyboard.TargetName       = "FocusedBG"
                                                                Storyboard.TargetProperty   = "Opacity"
                                                                Duration                    = "{StaticResource TransitionDuration}"
                                                                To                          = "1"
                                                                />
                                                        </Storyboard>
                                                        
                                                        <Storyboard x:Key="FocusedAnimationOut">
                                                            <DoubleAnimation
                                                                Storyboard.TargetName       ="FocusedBG"
                                                                Storyboard.TargetProperty   ="Opacity"
                                                                Duration                    ="{StaticResource TransitionDuration}"
                                                                To                          ="0"
                                                                />
                                                        </Storyboard>
                                                    </ControlTemplate.Resources>

                                                    <!-- Toggle Button Event States -->
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard Storyboard="{StaticResource FocusedAnimationIn}"/>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard Storyboard="{StaticResource FocusedAnimationOut}"/>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                    
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <!-- Selection Display -->
                            <ContentPresenter
                                x:Name                = "DropDownSelection"
                                Margin                = "17, 2, 51, 2"
                                HorizontalAlignment   = "Left"
                                VerticalAlignment     = "Center"
                                IsHitTestVisible      = "False"
                                
                                TextBlock.Foreground   = "{StaticResource InputTextActive}"
                                TextBlock.FontFamily   = "{StaticResource CenturyGothicReg}"
                                TextBlock.FontSize     = "16"
                                
                                ContentTemplate           = "{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector   = "{TemplateBinding ItemTemplateSelector}"
                                Content                   = "{TemplateBinding SelectionBoxItem}"
                                />

                            <!-- Editable TextBox -->
                            <TextBox
                                x:Name                = "PART_EditableTextBox"
                                Margin                = "17, 2, 51, 2"
                                HorizontalAlignment   = "Left"
                                VerticalAlignment     = "Center"
                                
                                Background            = "Transparent"
                                BorderBrush           = "Transparent"
                                BorderThickness       = "0"
                                
                                Focusable             = "False"
                                Visibility            = "Hidden"
                                IsReadOnly            = "{TemplateBinding IsReadOnly}"
                                     
                                TextBlock.Foreground   = "{StaticResource InputTextActive}"
                                TextBlock.FontFamily   = "{StaticResource CenturyGothicReg}"
                                TextBlock.FontSize     = "16"
                                />

                            <!-- DropDown List -->
                            <Popup
                                x:Name               = "PART_Popup"
                                IsOpen               = "{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency   = "True"
                                PopupAnimation       = "Slide"
                                >
                                
                                <ScrollViewer
                                    x:Name                = "ScrollViewer"
                                    MinWidth              = "{TemplateBinding ActualWidth}"
                                    MaxHeight             = "{TemplateBinding MaxDropDownHeight}"
                                    Height                = "Auto"
                                    HorizontalAlignment   = "Stretch"
                                    
                                    Template   = "{DynamicResource DropDownScrollViewer}"
                                    >
                                    
                                    <ItemsPresenter/>
                                    
                                </ScrollViewer>
                                
                            </Popup>
                            
                        </Grid>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <!-- Scroll Viewer for ComboBox -->
        <ControlTemplate x:Key="DropDownScrollViewer" TargetType="{x:Type ScrollViewer}">
            
            <!-- Visual Tree -->
            <Grid
                x:Name       = "Grid"
                Background   = "{TemplateBinding Background}"
                >
                
                <!-- Layout Partition -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- Corner Between Scroll Bars -->
                <Rectangle
                    x:Name        = "Corner"
                    Grid.Row      = "1"
                    Grid.Column   = "1"
                    Fill          = "{TemplateBinding Background}"
                    />
                
                <!-- Content -->
                <ScrollContentPresenter
                    x:Name        = "PART_ScrollContentPresenter"
                    Grid.Row      = "0"
                    Grid.Column   = "0"
                    Margin        = "{TemplateBinding Padding}"
                    
                    CanContentScroll        = "{TemplateBinding CanContentScroll}"
                    CanHorizontallyScroll   = "False"
                    CanVerticallyScroll     = "False"
                    
                    ContentTemplate   = "{TemplateBinding ContentTemplate}"
                    Content           = "{TemplateBinding Content}"
                    />
                
                <!-- Vertical Scroll Bar -->
                <Border
                    Grid.Row          = "0"
                    Grid.Column       = "1"
                    Margin            = "-1, -1, 0, 0"
                    BorderBrush       = "{StaticResource InputBorderInactive}"
                    BorderThickness   = "1"
                    >

                    <Border.Background>
                        <SolidColorBrush Color="{StaticResource ListItem.BGInactive}"/>
                    </Border.Background>
                    
                    <ScrollBar
                        x:Name         = "PART_VerticalScrollBar"
                        Cursor         = "Arrow"
                        Minimum        = "0"
                        Maximum        = "{TemplateBinding ScrollableHeight}"
                        ViewportSize   = "{TemplateBinding ViewportHeight}"
                        Visibility     = "{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        Value          = "{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        
                        AutomationProperties.AutomationId   = "VerticalScrollBar"
                        />
                
                </Border>

                <ScrollBar
                    x:Name         = "PART_HorizontalScrollBar"
                    Grid.Row       = "1"
                    Grid.Column    = "0"
                    Orientation    = "Horizontal"
                    Cursor         = "Arrow"
                    Minimum        = "0"
                    Maximum        = "{TemplateBinding ScrollableWidth}"
                    ViewportSize   = "{TemplateBinding ViewportWidth}"
                    Visibility     = "{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                    Value          = "{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                    
                    AutomationProperties.AutomationId   = "HorizontalScrollBar"
                    />
                
            </Grid>
            
        </ControlTemplate>

        <!-- Scroll Bar Body -->
        <Style TargetType="{x:Type ScrollBar}">
            
            <!-- Style -->
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="19"/>
            <Setter Property="MinWidth" Value="19"/>
            
            <!-- Control Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        
                        <!-- Visual Tree -->
                        <Grid
                            x:Name       = "GridRoot"
                            Width        = "{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            Background   = "{TemplateBinding Background}"
                            >
                            
                            <Track x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource DropDownThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{DynamicResource DropDownPage}" Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{DynamicResource DropDownPage}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                            
                        </Grid>

                        <!-- Rotate Existing Template for Horizontal -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
                                <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
                                <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <!-- Scroll Bar Thumb -->
        <Style x:Key="DropDownThumb" TargetType="{x:Type Thumb}">
            
            <!-- Style -->
            <Setter Property="Background" Value="{StaticResource InputTextActive}"/>
            
            <!-- Control Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        
                        <!-- Visual Tree -->
                        <Border
                            Width        = "Auto"
                            Height       = "Auto"
                            Margin       = "6"
                            Background   = "{TemplateBinding Background}"
                            />
                        
                        <!-- Triggers -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                            <Trigger Property="IsDragging" Value="True"/>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <!-- Scroll Bar Background -->
        <Style x:Key="DropDownPage" TargetType="{x:Type RepeatButton}">
            
            <!-- Style -->
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            
            <!-- Control Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        
                        <!-- Visual Tree -->
                        <Rectangle
                            Width    = "{TemplateBinding Width}"
                            Height   = "{TemplateBinding Height}"
                            Fill     = "{TemplateBinding Background}"
                            Stroke   = "{TemplateBinding BorderBrush}"
                            />
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>

        <!-- List Items for ComboBox -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            
            <!-- Style -->
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Background" Value="{StaticResource ListItem.Border}"/>
            <Setter Property="BorderBrush" Value="{StaticResource InputBorderInactive}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource InputTextActive}"/>
            <Setter Property="FontFamily" Value="{StaticResource HelveticaNeueLtEx}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0, -1, 0, 0"/>
            <Setter Property="Padding" Value="7, 3, 7, 4"/>

            <!-- Control Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">

                        <!-- Visual Tree -->
                        <Border
                            Name                  = "Border"
                            Padding               = "{TemplateBinding Padding}"
                            SnapsToDevicePixels   = "{TemplateBinding SnapsToDevicePixels}"
                            Background            = "{TemplateBinding Background}"
                            BorderBrush           = "{TemplateBinding BorderBrush}"
                            BorderThickness       = "{TemplateBinding BorderThickness}"
                            >

                            <ContentPresenter/>

                        </Border>

                        <!-- Resources -->
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HighlightIn">
                                <ColorAnimation
                                    Storyboard.TargetName       = "Border"
                                    Storyboard.TargetProperty   = "(Background).(SolidColorBrush.Color)"
                                    Duration                    = "{StaticResource TransitionDuration}"
                                    To                          = "{StaticResource ListItem.BGActive}"
                                    />
                            </Storyboard>

                            <Storyboard x:Key="HighlightOut">
                                <ColorAnimation
                                    Storyboard.TargetName       = "Border"
                                    Storyboard.TargetProperty   = "(Background).(SolidColorBrush.Color)"
                                    Duration                    = "{StaticResource TransitionDuration}"
                                    To                          = "{StaticResource ListItem.BGInactive}"
                                    />
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <!-- Event States -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HighlightIn}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HighlightOut}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
    </Application.Resources>
</Application>
